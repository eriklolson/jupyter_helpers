template_term:
  h: |
    # {{Term}}
    {{Definition}}

  ex: |
    #### Example:
    >~~~~~~python
    > {{CodeExample}}
    >~~~~~~

  n: |
    #### Notes:
    -  {{Note1}}
    -  {{Note2}}

  tc: |
    #### ‚è±Ô∏è Time Complexity:
    üü° Average (typical): ${{AverageCase}}$ ‚Äî [{{AverageName}}](_DSAGlossary/_DSATimeComplexity.ipynb#{{AverageSlug}})
    üî¥ Worst (guaranteed): ${{WorstCase}}$ ‚Äî [{{WorstName}}](_DSAGlossary/_DSATimeComplexity.ipynb#{{WorstSlug}})

  fo: |
    * * *
    * * *

template_math: |
  # {{Term}}
  {{Code/ML Definition}}
  {{Math Definition}}
  {{Statistics Definition}}

  #### Code Example:
  >~~~~~~python
  > {{Code/ML Example}}
  >~~~~~~

  #### Math Example:
  >$$
  > {{Math Example}}
  >$$

  #### ‚è±Ô∏è Time Complexity:
  - Average (typical): ${{AverageCase}}$ ‚Äî [{{AverageName}}](_DSAGlossary/_DSATimeComplexity.ipynb#{{AverageName}})
  - Worst (guaranteed): ${{WorstCase}}$ ‚Äî [{{WorstName}}](_DSAGlossary/_DSATimeComplexity.ipynb#{{WorstName}})

  #### Notes:
  -  {{Note1}}
  -  {{Note2}}

  * * *
  * * *

template_func: |
  # `{{FunctionName}}()`
  ### from `{{ModulePath}}`
  {{Description}}

  >~~~~~~python
  > {{FunctionName}}(
  >     {{Param1}}={{Default1}},
  >     {{Param2}}={{Default2}},
  >     *,
  >     {{Param3}}={{Default3}},
  >     {{Param4}}={{Default4}},
  >     {{Param5}}={{Default5}}
  >     {{...}}
  > )
  >~~~~~~

  | **Syntax** | **Definition** |
  |------------|----------------|
  | `{{Param1}}={{Default1}}` | {{Definition1}} |
  | `{{Param2}}={{Default2}}` | {{Definition2}} |
  | {{...}} | {{...}} |

  #### Attributes *(if applicable)*:
  - `{{Attribute1}}`: {{Attribute1Description}}
  - `{{Attribute2}}`: {{Attribute2Description}}

  #### Example Usage:
  >~~~~~~python
  > {{ExampleCode}}
  >~~~~~~

  #### {{MethodName}}({{MethodSignature}})
  - {{MethodDescription}}

  >~~~~~~python
  > {{MethodExampleCode}}
  >~~~~~~

  #### ‚è±Ô∏è Time Complexity:
  üü° Average (typical): ${{AverageCase}}$ ‚Äî [{{AverageName}}](_DSAGlossary/_DSATimeComplexity.ipynb#{{AverageName}})
  üî¥ Worst (guaranteed): ${{WorstCase}}$ ‚Äî [{{WorstName}}](_DSAGlossary/_DSATimeComplexity.ipynb#{{WorstName}})

  * * *
  * * *

template_diagram:
  h2: |
    # {{Term}}
    {{Definition}}

  di: |
    #### Diagram of {{Term}}:
    ~~~~~~mathmatica
    {{Diagram}}
    ~~~~~~

  n2: |
    #### Notes:
    -  {{Note1}}
    -  {{Note2}}

  ex2: |
    #### Python Example:
    >~~~~~~python
    > {{CodeExample}}
    >~~~~~~

  tc2: |
    #### ‚è±Ô∏è Time Complexity:
    üü° Average (typical): ${{AverageCase}}$ ‚Äî [{{AverageName}}](_DSAGlossary/_DSATimeComplexity.ipynb#{{AverageName}})
    üî¥ Worst (guaranteed): ${{WorstCase}}$ ‚Äî [{{WorstName}}](_DSAGlossary/_DSATimeComplexity.ipynb#{{WorstName}})

  fo2: |
    * * *
    * * *
template_tree:
  trh: |
    # *{{Term}}* Binary Tree
    {{Definition}}

  trp: |
    #### Properties:
    -  {{Note1}}
    -  {{Note2}}

  trd: |
    <div style="display: flex; gap: 40px;">
      <div>

    **‚ùå Not {{Term}} Binary Tree**
    ~~~~~~mathmatica
    {{TypeDistinguishingExample}}
    ~~~~~~
      </div>
      <div>

    **‚úÖ {{Term}} Binary Tree**
    ~~~~~~mathmatica
    {{TypeContradistinguishingExample}}
    ~~~~~~
      </div>
    </div>

  trc: |
    #### How to Construct:

  trt: |
    #### ‚è±Ô∏è Time Complexity Notes:
  
  tra: |
    #### Common Applications:
    -  {{Note1}}
    -  {{Note2}}

  tree: |
    #### Python Example:
    >~~~~~~python
    > {{CodeExample}}
    >~~~~~~

  trf: |
    * * *
    * * *

